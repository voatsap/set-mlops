#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∑–∞–≤–¥–∞–Ω–Ω—è Ray –¥–ª—è —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è YOLO
–¶–µ–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è —è–∫ –∑–∞–≤–¥–∞–Ω–Ω—è Ray –Ω–∞ –∫–ª–∞—Å—Ç–µ—Ä—ñ
"""

import os
import sys
import subprocess
from pathlib import Path

def install_system_dependencies():
    """–í—Å—Ç–∞–Ω–æ–≤–ª—é—î —Å–∏—Å—Ç–µ–º–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ, –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–ª—è OpenCV"""
    print("üîß Installing system dependencies...")
    try:
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º–∞—î–º–æ –¥–æ—Å—Ç—É–ø sudo —Ç–∞ —á–∏ –¥–æ—Å—Ç—É–ø–Ω–∏–π apt
        result = subprocess.run(["which", "apt"], capture_output=True)
        if result.returncode != 0:
            print("‚ö†Ô∏è  apt not found, skipping system dependencies")
            return True
        
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ libgl1 —Ç–∞ —ñ–Ω—à—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ OpenCV
        result = subprocess.run(
            "sudo apt update && sudo apt install -y libgl1-mesa-glx libglib2.0-0 libsm6 libxext6 libxrender-dev libgomp1",
            shell=True, capture_output=True, text=True, check=True
        )
        print("‚úÖ System dependencies installed successfully")
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ö†Ô∏è  Failed to install system dependencies: {e}")
        print("   This might cause OpenCV issues, but continuing...")
        print(f"   STDERR: {e.stderr}")
        return True  # –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –≤ –±—É–¥—å-—è–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É, –æ—Å–∫—ñ–ª—å–∫–∏ —Ü–µ –º–æ–∂–µ –±—É—Ç–∏ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ
    except Exception as e:
        print(f"‚ö†Ô∏è  Error installing system dependencies: {e}")
        return True  # –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –≤ –±—É–¥—å-—è–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É

def install_requirements():
    """–í—Å—Ç–∞–Ω–æ–≤–ª—é—î Python –≤–∏–º–æ–≥–∏ –Ω–∞ –≤–æ—Ä–∫–µ—Ä—ñ"""
    print("üì¶ Installing Python requirements...")
    try:
        result = subprocess.run([
            sys.executable, "-m", "pip", "install", "-r", "requirements.txt"
        ], capture_output=True, text=True, check=True)
        print("‚úÖ Python requirements installed successfully")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Failed to install Python requirements: {e}")
        print(f"STDERR: {e.stderr}")
        return False

def setup_environment():
    """–ù–∞–ª–∞—à—Ç–æ–≤—É—î –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –Ω–∞ –≤–æ—Ä–∫–µ—Ä—ñ"""
    wandb_key = os.getenv('WANDB_API_KEY')
    if wandb_key:
        print("‚úÖ WANDB_API_KEY found in environment")
    else:
        print("‚ö†Ô∏è  WANDB_API_KEY not found - W&B logging may not work")
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ .env —Ñ–∞–π–ª –¥–ª—è —Å–∫—Ä–∏–ø—Ç–∞ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
    with open('.env', 'w') as f:
        f.write(f"WANDB_API_KEY={wandb_key or ''}")
    print("‚úÖ Environment file created")
    return True

def run_yolo_training():
    """–ó–∞–ø—É—Å–∫–∞—î —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è YOLO –Ω–∞ –≤–æ—Ä–∫–µ—Ä—ñ"""
    print("üöÄ Starting YOLO training...")
    try:
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –∑ –≤–∏–≤–æ–¥–æ–º –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ
        process = subprocess.Popen(
            [sys.executable, "train_yolo.py"],
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
            universal_newlines=True,
            bufsize=1
        )
        
        # –í–∏–≤–æ–¥–∏–º–æ –≤–∏–≤—ñ–¥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ
        for line in process.stdout:
            print(line.strip())
        
        process.wait()
        
        if process.returncode == 0:
            print("‚úÖ Training completed successfully")
            return True
        else:
            print(f"‚ùå Training failed with return code: {process.returncode}")
            return False
            
    except Exception as e:
        print(f"‚ùå Training failed: {e}")
        return False

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è - –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è —è–∫ –∑–∞–≤–¥–∞–Ω–Ω—è Ray"""
    print("=" * 50)
    print("ü§ñ Ray Job: YOLO Training")
    print("=" * 50)
    
    # –ü–µ—Ä–µ–ª—ñ—á—É—î–º–æ —Ñ–∞–π–ª–∏ –≤ —Ä–æ–±–æ—á—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
    print("üìÅ Files in working directory:")
    for file in sorted(Path('.').iterdir()):
        if file.is_file():
            print(f"  - {file.name}")
    
    # –ö—Ä–æ–∫ 1: –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å–∏—Å—Ç–µ–º–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
    print("\nüîß Step 1: Installing system dependencies...")
    if not install_system_dependencies():
        print("‚ùå Failed to install system dependencies")
        sys.exit(1)
    
    # –ö—Ä–æ–∫ 2: –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ Python –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
    print("\nüîß Step 2: Installing Python requirements...")
    if not install_requirements():
        print("‚ùå Failed to install Python requirements")
        sys.exit(1)
    
    # –ö—Ä–æ–∫ 3: –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ
    print("\nüîß Step 3: Setting up environment...")
    if not setup_environment():
        print("‚ùå Failed to setup environment")
        sys.exit(1)
    
    # –ö—Ä–æ–∫ 4: –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
    print("\nüîß Step 4: Running YOLO training...")
    if not run_yolo_training():
        print("‚ùå Training failed")
        sys.exit(1)
    
    print("üéâ All tasks completed successfully!")

if __name__ == "__main__":
    main() 